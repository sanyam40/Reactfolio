Event handling can be done using props in React. 
Props are used to pass data from parent to child components.
Props are also used to handle events in React. 
In the child component, we can use props to handle events. In the parent component, we can pass the event handler as a prop to the child component.
Example :         <button onClick={clickHandler}>Add To Cart</button>
Here, clickHandler is the event handler passed as a prop to the child component.

if onclick={clickhandler()} is passed then it will automatically the function without click.
if onclick={clickhandler} is passed then it will call the function on click.
every prop has to map to a handler function.

instead of addEventListener we use onClick={clickHandler} in react.

- without using State
value is not changed on click of button.
bcoz of react is not aware of the change in the value of the variable and doesnt render the component.
so we need to use state to make react aware of the change in the value of the variable.
and render the component again.

--> React Hooks : it is utility functions provided by react.

(1) useState : 
State is used to store data that will be used by the component.
State is used to make the component dynamic. and Render the component again.
useState() return a variable and a function to update the variable.
Both are returned as an array.
Example : const [title, settitle] = useState(props.title);

setTitle() will schedule the update to the title variable.

Q. Why is the value returned by useState declared as a constant?
The value returned by useState is declared as a constant (const) 
because the identity of the state variable should not change during the component's lifecycle. 
The const keyword in JavaScript is used to declare constants, which are variables that cannot be reassigned.

------------------------------------------------------------------------------------------------------------------------------

Parent communicates with child using props and child also communicates with parent using props.(lifting state up)
Two siblings components can't share the data between them .Sharing has to be done by the parent component.

--> Lifting state up : 
when we want to update the state of the parent component
from parent we pass the function as a prop to the child.
and in child we call that function with the value as a parameter.

Step 1: Create a function in the parent component that will update the state.
Step 2: Pass the function as a prop to the child component.
Example : <Form print={printItems}/> 
Step 3: In the child component, call the function using props.
Example : props.print("Hello World") // print is the name of the prop



